#!/bin/sh

# Copyright (c) 2010 Todd T. Fries <todd@fries.net>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

ifup="$HOME/vm/OpenBSD/ifup"
t=`tty`

unset s

if [ "$1" = "-np" ]; then
	prompt=0
	shift
else
	prompt=1
fi

if [ "$1" = "-n" ]; then
	net=YES
	shift
fi

if [ "$1" = "-m" ]; then
	_MEM="$2"
	shift;shift
else
	_MEM="32"
fi

[ -f fd0 ] && a="$a -fda fd0"
if [ "$1" ]; then
	if [ -f $1 ]; then
		a="$a -hda $1"
		a="$a -m ${_MEM}"
	else
		if [ -f "$1.cfg" ]; then
			. ./$1.cfg
		fi
		[ "$MEM" ] || MEM="${_MEM}"
		a="$a -m ${MEM}"
		[ "$HDA" ] || HDA="${1}.hd"
		if [ "$HDA" ]; then
			a="$a -hda ${HDA}"
		fi
	fi
	shift
fi
if [ "$net" = "YES" ]; then
	a="$a -n $ifup " s=sudo

fi

if [ "$1" -a -f "$1" ]; then
	a="$a -hdb $1"
	if [ "$2" -a -f $2 ]; then
		_CDROM="$2"
		shift
	fi
	shift
else
	if [ "$HDB" -a -f "$HDB" ]; then
		a="$a -hdb $HDB"
	fi
fi
if [ "$HDC" -a -f "$HDC" ]; then
	a="$a -hdc $HDC"
fi
if [ "$HDD" -a -f "$HDD" ]; then
	a="$a -hdd $HDD"
else
	if [ "$CDROM" ]; then
	 	a="$a -cdrom ${CDROM}"
	else
		if [ "${_CDROM}" ]; then
			a="$a -cdrom ${_CDROM}"
		fi
	fi
fi
#a="$a -enable-audio"
if [ "$MONITOR" ]; then
	a="$a -monitor $MONITOR"
fi
if [ "$SERIAL" ]; then
	a="$a -serial $SERIAL"
fi
a="$a $@"
#	-nographic -monitor ptyxz

if [ "${M}" ]; then
	sys="-system-${M}"
else
	sys=""
fi

if [ "${BOOT}" ]; then
	a="$a -boot ${BOOT}"
fi

# if %MACADDR% is in an argument, we want to randomize
# the mac address to not conflict with other qemu instances
# also, incase we have multiple nics, we do one loop
# per %MACADD% so as to randomize each separately
while echo "$a" | grep "%MACADDR%" > /dev/null 2>&1; do
	mac="52:54:00:$(
	dd if=/dev/arandom bs=8 count=1 2> /dev/null | \
	hexdump | \
	awk '/0000000/ { \
		sub("[0-9a-f][0-9a-f]$","",$2); \
		sub("[0-9a-f][0-9a-f]$","",$3); \
		sub("[0-9a-f][0-9a-f]$","",$4); \
		print $2 ":" $3 ":" $4}'
	)"
	a="$(echo "$a" | sed 's/%MACADDR%/'$mac'/')"
done

echo "Start: qemu${sys} $a"
echo "Stop: $stop"
if [ "$prompt" = "1" ]; then
	echo -n "ok? "
	read start
else
	start="Y"
fi
case "$start" in
[Yy]*)
	$s qemu${sys} $a
	# If devfile does not exist, networking open failed
	devfile=${ifup}.${t#/dev/tty*}
	if [ "$net" = "YES" -a -e $devfile ]; then
		tun=`cat ${ifup}.${t#/dev/tty*}`
		sudo ifconfig $tun down
		sudo ifconfig $tun destroy
		[ "$guestv6" ] || sudo pkill -9 rtadvd
		[ "$hostv4" ] || sudo pkill -9 dhcpd
		rm -f $devfile
	fi
;;
esac
